{"ast":null,"code":"var _jsxFileName = \"/Users/chrisl/Development/react-api/src/components/Contacts.js\";\nimport React, { Component, useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap'; // import 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Contacts extends Component {\n  constructor({\n    contacts\n  }) {\n    this.contacts = contacts;\n  }\n\n  reunder() {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => {\n      this.setState({\n        selectedDelivery: null\n      });\n      setShow(false);\n    };\n\n    const handleShow = e => {\n      this.setState({\n        selectedDelivery: e\n      });\n      setShow(true);\n    };\n\n    const claimComplete = e => {\n      console.log('complete');\n      handleClose();\n    };\n\n    const claimPartial = () => {\n      const deliveryNode = this.state.selectedDelivery;\n      claim().then(data => {\n        deliveryNode.style.backgroundColor = 'yellow';\n        handleClose();\n      }).catch(console.log);\n    };\n\n    const claim = () => {\n      return fetch('http://jsonplaceholder.typicode.com/users').then(res => res.json()).then(data => {\n        console.log('fake done');\n        return data;\n      }).catch(console.log);\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, \"Deliveries\")), contacts.map(contact => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      key: contact.id,\n      onClick: handleShow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, contact.name), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"card-subtitle mb-2 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, contact.email), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, contact.company.catchPhrase)))), /*#__PURE__*/React.createElement(Modal, {\n      show: show,\n      onHide: handleClose,\n      animation: false,\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }, \"Fulfill Delivery\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, \"Can you fulfill this entire delivery?\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"warning\",\n      onClick: claimPartial,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, \"Part of it\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: claimComplete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, \"All of it\"))));\n  }\n\n}\n\n; // const Contacts = ({ contacts }) => {\n//     state = {\n//         selectedDelivery: null\n//     };\n//     const [show, setShow] = useState(false);\n//     const handleClose = () => {\n//         this.setState({ selectedDelivery: null })\n//         setShow(false)\n//     };\n//     const handleShow = (e) => {\n//         this.setState({ selectedDelivery: e })\n//         setShow(true)\n//     };\n//     const claimComplete = (e) => {\n//         console.log('complete');\n//         handleClose();\n//     };\n//     const claimPartial = () => {\n//         const deliveryNode = this.state.selectedDelivery;\n//         claim()\n//             .then((data) => {\n//                 deliveryNode.style.backgroundColor = 'yellow';\n//                 handleClose();\n//             })\n//             .catch(console.log);\n//     };\n//     const claim = () => {\n//         return fetch('http://jsonplaceholder.typicode.com/users')\n//         .then(res => res.json())\n//         .then((data) => {\n//           console.log('fake done')\n//           return data;\n//         })\n//         .catch(console.log)\n//     };\n//     return (\n//         <div>\n//             <center><h1>Deliveries</h1></center>\n//             {contacts.map((contact) => (\n//             <div className=\"card\" key={contact.id} onClick={handleShow}>\n//                 <div className=\"card-body\">\n//                 <h5 className=\"card-title\">{contact.name}</h5>\n//                 <h6 className=\"card-subtitle mb-2 text-muted\">{contact.email}</h6>\n//                 <p className=\"card-text\">{contact.company.catchPhrase}</p>\n//                 </div>\n//             </div>\n//             ))}\n//             <Modal show={show} onHide={handleClose} animation={false} centered>\n//                 <Modal.Header closeButton>\n//                     <Modal.Title>Fulfill Delivery</Modal.Title>\n//                 </Modal.Header>\n//                 <Modal.Body>Can you fulfill this entire delivery?</Modal.Body>\n//                 <Modal.Footer>\n//                     <Button variant=\"warning\" onClick={claimPartial}>\n//                         Part of it\n//                     </Button>\n//                     <Button variant=\"primary\" onClick={claimComplete}>\n//                         All of it\n//                     </Button>\n//                 </Modal.Footer>\n//             </Modal>\n//         </div>\n//     )\n// };\n\nexport default Contacts;","map":{"version":3,"sources":["/Users/chrisl/Development/react-api/src/components/Contacts.js"],"names":["React","Component","useState","Button","Modal","Contacts","constructor","contacts","reunder","show","setShow","handleClose","setState","selectedDelivery","handleShow","e","claimComplete","console","log","claimPartial","deliveryNode","state","claim","then","data","style","backgroundColor","catch","fetch","res","json","map","contact","id","name","email","company","catchPhrase"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport {Button, Modal} from 'react-bootstrap'\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Contacts extends Component {\n\n    state = {\n        selectedDelivery: null\n    };\n\n    constructor({ contacts }) {\n        this.contacts = contacts;\n    }\n\n    reunder() {\n        const [show, setShow] = useState(false);\n        const handleClose = () => {\n            this.setState({ selectedDelivery: null })\n            setShow(false)\n        };\n        const handleShow = (e) => {\n            this.setState({ selectedDelivery: e })\n            setShow(true)\n        };\n    \n        const claimComplete = (e) => {\n            console.log('complete');\n            handleClose();\n        };\n        const claimPartial = () => {\n            const deliveryNode = this.state.selectedDelivery;\n            claim()\n                .then((data) => {\n                    deliveryNode.style.backgroundColor = 'yellow';\n                    handleClose();\n                })\n                .catch(console.log);\n        };\n    \n        const claim = () => {\n            return fetch('http://jsonplaceholder.typicode.com/users')\n            .then(res => res.json())\n            .then((data) => {\n              console.log('fake done')\n              return data;\n            })\n            .catch(console.log)\n        };\n    \n        return (\n            <div>\n                <center><h1>Deliveries</h1></center>\n                {contacts.map((contact) => (\n                <div className=\"card\" key={contact.id} onClick={handleShow}>\n                    <div className=\"card-body\">\n                    <h5 className=\"card-title\">{contact.name}</h5>\n                    <h6 className=\"card-subtitle mb-2 text-muted\">{contact.email}</h6>\n                    <p className=\"card-text\">{contact.company.catchPhrase}</p>\n                    </div>\n                </div>\n                ))}\n    \n                <Modal show={show} onHide={handleClose} animation={false} centered>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Fulfill Delivery</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>Can you fulfill this entire delivery?</Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"warning\" onClick={claimPartial}>\n                            Part of it\n                        </Button>\n                        <Button variant=\"primary\" onClick={claimComplete}>\n                            All of it\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        )\n    }\n};\n\n// const Contacts = ({ contacts }) => {\n\n//     state = {\n//         selectedDelivery: null\n//     };\n\n//     const [show, setShow] = useState(false);\n//     const handleClose = () => {\n//         this.setState({ selectedDelivery: null })\n//         setShow(false)\n//     };\n//     const handleShow = (e) => {\n//         this.setState({ selectedDelivery: e })\n//         setShow(true)\n//     };\n\n//     const claimComplete = (e) => {\n//         console.log('complete');\n//         handleClose();\n//     };\n//     const claimPartial = () => {\n//         const deliveryNode = this.state.selectedDelivery;\n//         claim()\n//             .then((data) => {\n//                 deliveryNode.style.backgroundColor = 'yellow';\n//                 handleClose();\n//             })\n//             .catch(console.log);\n//     };\n\n//     const claim = () => {\n//         return fetch('http://jsonplaceholder.typicode.com/users')\n//         .then(res => res.json())\n//         .then((data) => {\n//           console.log('fake done')\n//           return data;\n//         })\n//         .catch(console.log)\n//     };\n\n//     return (\n//         <div>\n//             <center><h1>Deliveries</h1></center>\n//             {contacts.map((contact) => (\n//             <div className=\"card\" key={contact.id} onClick={handleShow}>\n//                 <div className=\"card-body\">\n//                 <h5 className=\"card-title\">{contact.name}</h5>\n//                 <h6 className=\"card-subtitle mb-2 text-muted\">{contact.email}</h6>\n//                 <p className=\"card-text\">{contact.company.catchPhrase}</p>\n//                 </div>\n//             </div>\n//             ))}\n\n//             <Modal show={show} onHide={handleClose} animation={false} centered>\n//                 <Modal.Header closeButton>\n//                     <Modal.Title>Fulfill Delivery</Modal.Title>\n//                 </Modal.Header>\n//                 <Modal.Body>Can you fulfill this entire delivery?</Modal.Body>\n//                 <Modal.Footer>\n//                     <Button variant=\"warning\" onClick={claimPartial}>\n//                         Part of it\n//                     </Button>\n//                     <Button variant=\"primary\" onClick={claimComplete}>\n//                         All of it\n//                     </Button>\n//                 </Modal.Footer>\n//             </Modal>\n//         </div>\n//     )\n// };\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}