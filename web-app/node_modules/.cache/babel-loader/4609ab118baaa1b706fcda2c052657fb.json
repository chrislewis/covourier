{"ast":null,"code":"var _jsxFileName = \"/Users/chrisl/Development/react-api/src/components/Deliveries.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\n\nclass Deliveries extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      show: false\n    };\n  }\n\n  render() {\n    const {\n      deliveries\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    }, deliveries.map(delivery => /*#__PURE__*/React.createElement(Delivery, {\n      key: delivery.id,\n      delivery: delivery,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nclass Delivery extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      show: false\n    };\n  }\n\n  handleAccept({\n    currentTarget\n  }, id) {\n    this.setState({\n      show: true,\n      deliveryDOMNode: currentTarget,\n      deliveryId: id\n    });\n  }\n\n  handleFulfillPartial() {\n    this.state.deliveryDOMNode.style.backgroundColor = 'yellow';\n    this.setState({\n      show: false\n    });\n  }\n\n  handleFulfillComplete() {\n    this.state.deliveryDOMNode.style.backgroundColor = 'green';\n    this.setState({\n      show: false\n    });\n  }\n\n  render() {\n    const {\n      delivery\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.show,\n      onHide: () => this.setState({\n        show: false\n      }),\n      animation: false,\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, \"Fulfill Delivery (\", this.state.deliveryId, \")\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, \"Can you fulfill this entire delivery?\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"warning\",\n      onClick: () => this.handleFulfillPartial(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, \"Part of it\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.handleFulfillComplete(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, \"All of it\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      key: delivery.id,\n      onClick: e => this.handleAccept(e, delivery.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, delivery.name), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"card-subtitle mb-2 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, delivery.email), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, delivery.company.catchPhrase))));\n  }\n\n}\n\nexport default Deliveries;","map":{"version":3,"sources":["/Users/chrisl/Development/react-api/src/components/Deliveries.js"],"names":["React","Component","Button","Modal","Deliveries","state","show","render","deliveries","props","map","delivery","id","Delivery","handleAccept","currentTarget","setState","deliveryDOMNode","deliveryId","handleFulfillPartial","style","backgroundColor","handleFulfillComplete","e","name","email","company","catchPhrase"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Button, Modal} from 'react-bootstrap'\n\nclass Deliveries extends Component {\n    state = {\n        show: false\n    }\n\n    render() {\n        const { deliveries } = this.props;\n        return (\n            <>\n                <div>\n                    {deliveries.map((delivery) => (\n                        <Delivery key={delivery.id} delivery={delivery} />\n                    ))}\n                </div>\n            </>\n      );\n    }\n}\n\nclass Delivery extends Component {\n    state = { show: false }\n\n    handleAccept({ currentTarget }, id) {\n        this.setState({ show: true, deliveryDOMNode: currentTarget, deliveryId: id });\n    }\n\n    handleFulfillPartial() {\n        this.state.deliveryDOMNode.style.backgroundColor = 'yellow';\n        this.setState({ show: false })\n    }\n\n    handleFulfillComplete() {\n        this.state.deliveryDOMNode.style.backgroundColor = 'green';\n        this.setState({ show: false })\n    }\n\n    render() {\n        const { delivery } = this.props;\n        return (\n            <>\n                <Modal show={this.state.show} onHide={() => this.setState({show: false})} animation={false} centered>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Fulfill Delivery ({this.state.deliveryId})</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>Can you fulfill this entire delivery?</Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"warning\" onClick={() => this.handleFulfillPartial()}>\n                            Part of it\n                        </Button>\n                        <Button variant=\"primary\" onClick={() => this.handleFulfillComplete()}>\n                            All of it\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n\n                <div className=\"card\" key={delivery.id} onClick={(e) => this.handleAccept(e, delivery.id)}>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{delivery.name}</h5>\n                        <h6 className=\"card-subtitle mb-2 text-muted\">{delivery.email}</h6>\n                        <p className=\"card-text\">{delivery.company.catchPhrase}</p>\n                    </div>\n                </div>\n            </>\n      );\n    }\n}\n  \nexport default Deliveries;"]},"metadata":{},"sourceType":"module"}