{"ast":null,"code":"var _jsxFileName = \"/Users/chrisl/Development/react-api/src/components/Contacts.js\";\nimport React, { Component, useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap'; // import 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Contacts = ({\n  contacts\n}) => {\n  var selectedDelivery = null;\n  const [show, setShow] = useState(false);\n\n  var handleClose = () => {\n    selectedDelivery = null;\n    setShow(false);\n  };\n\n  var handleShow = e => {\n    console.log(`setting selectedDelivery ${selectedDelivery} to ${e}`);\n    selectedDelivery = e;\n    setShow(true);\n  };\n\n  const claimComplete = e => {\n    console.log('complete');\n    handleClose();\n  };\n\n  var claimPartial = () => {\n    const deliveryNode = selectedDelivery;\n    claim().then(data => {\n      deliveryNode.style.backgroundColor = 'yellow';\n      handleClose();\n    }).catch(console.log);\n  };\n\n  const claim = () => {\n    return fetch('http://jsonplaceholder.typicode.com/users').then(res => res.json()).then(data => {\n      console.log('fake done');\n      return data;\n    }).catch(console.log);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Deliveries\")), contacts.map(contact => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    key: contact.id,\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, contact.name), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"card-subtitle mb-2 text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, contact.email), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, contact.company.catchPhrase)))), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    animation: false,\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"Fulfill Delivery\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Can you fulfill this entire delivery?\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"warning\",\n    onClick: claimPartial,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"Part of it\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: claimComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"All of it\"))));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["/Users/chrisl/Development/react-api/src/components/Contacts.js"],"names":["React","Component","useState","Button","Modal","Contacts","contacts","selectedDelivery","show","setShow","handleClose","handleShow","e","console","log","claimComplete","claimPartial","deliveryNode","claim","then","data","style","backgroundColor","catch","fetch","res","json","map","contact","id","name","email","company","catchPhrase"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport {Button, Modal} from 'react-bootstrap'\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Contacts = ({ contacts }) => {\n\n    var selectedDelivery = null;\n\n    const [show, setShow] = useState(false);\n    var handleClose = () => {\n        selectedDelivery = null;\n        setShow(false)\n    };\n    var handleShow = (e) => {\n        console.log(`setting selectedDelivery ${selectedDelivery} to ${e}`)\n        selectedDelivery = e;\n        setShow(true)\n    };\n\n    const claimComplete = (e) => {\n        console.log('complete');\n        handleClose();\n    };\n    var claimPartial = () => {\n        const deliveryNode = selectedDelivery;\n        claim()\n            .then((data) => {\n                deliveryNode.style.backgroundColor = 'yellow';\n                handleClose();\n            })\n            .catch(console.log);\n    };\n\n    const claim = () => {\n        return fetch('http://jsonplaceholder.typicode.com/users')\n        .then(res => res.json())\n        .then((data) => {\n          console.log('fake done')\n          return data;\n        })\n        .catch(console.log)\n    };\n\n    return (\n        <div>\n            <center><h1>Deliveries</h1></center>\n            {contacts.map((contact) => (\n            <div className=\"card\" key={contact.id} onClick={handleShow}>\n                <div className=\"card-body\">\n                <h5 className=\"card-title\">{contact.name}</h5>\n                <h6 className=\"card-subtitle mb-2 text-muted\">{contact.email}</h6>\n                <p className=\"card-text\">{contact.company.catchPhrase}</p>\n                </div>\n            </div>\n            ))}\n\n            <Modal show={show} onHide={handleClose} animation={false} centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>Fulfill Delivery</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Can you fulfill this entire delivery?</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"warning\" onClick={claimPartial}>\n                        Part of it\n                    </Button>\n                    <Button variant=\"primary\" onClick={claimComplete}>\n                        All of it\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n};\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}